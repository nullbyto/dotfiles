#!/bin/sh


#######################################
# Colors
#######################################

NC='\033[0m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
LGREEN='\033[1;32m'
BLUE='\033[0;34m'
LBLUE='\033[1;34m'
RED='\033[0;31m'
YELLOW='\033[33m'

#######################################
# Init
#######################################

# Confirm running the script
read -p "$(echo -e "Do you wish to run the ${LBLUE}bootstrap script${NC} [y/N]: ")" yn

case $yn in
    [Yy]* ) 
        ;;
    * ) 
        exit
        ;;
esac

echo -e "${BLUE}Installing packages...${NC}"

PYPKGS=()
OUTPUT=()

#######################################
# Functions
#######################################

wm_menu() {
    echo -ne "
1) DWM
2) Awesome
3) Qtile (Arch only)
4) i3wm
*) None
Choose your ${LBLUE}WM${NC}: "
    read -r wm

    case $wm in
	1)  if ! git clone https://github.com/nullbyto/dwm.git ~/.dwm; then
                OUTPUT+=("${YELLOW}WARNING: ${LGREEN}dwm${NC} already installed!")
            else
                cd ~/.dwm && git checkout config && sudo make install && cd;
            fi

            if ! git clone https://github.com/nullbyto/dwmblocks-async.git ~/.dwmblocks-async; then
                OUTPUT+=("${YELLOW}WARNING: ${LGREEN}dwmblocks-async${NC} already installed!")
            else
                cd ~/.dwmblocks-async && sudo make install && cd;
            fi

	    if ! git clone https://github.com/nullbyto/dmenu-flexipatch.git ~/.dmenu-flexipatch; then
                OUTPUT+=("${YELLOW}WARNING: ${LGREEN}dmenu-flexipatch${NC} already installed!")
            else
                cd ~/.dmenu-flexipatch && sudo make install && cd;
            fi
	    ;;
        2)
            PACKAGES+=(awesome)
            ;;
        3) 
            PACKAGES+=(qtile)
            PYPKGS+=(
                psutil dbus-next
            )
            ;;
        4)
            PACKAGES+=(i3-wm)
            ;;
        *)
            echo -e "${BLUE}INFO: No WM selected.${NC}"
            OUTPUT+=("${BLUE}INFO:${NC} No WM was installed.")
    esac
}

#######################################
# install distro-specific packages
#######################################

PACKAGES=(
    git
    zsh 
    neovim
    emacs
    python3
    python-pip 
    nodejs
    npm
    neofetch
)

# Window manager setup
read -p "$(echo -e "Do you wish to setup a ${LBLUE}Custom Desktop${NC} with extra packages [y/N]: ")" yn


case $yn in
    [Yy]* ) 
        wm_menu

        PACKAGES+=(dunst feh rofi dmenu picom polybar brightnessctl NetworkManager-tui
        blueman pipewire pavucontrol playerctl thunar thunar-volman gvfs ranger redshift xarchiver
        khal flameshot xclip xreader arandr alsa-utils pamixer polkit nitrogen
        lxappearance lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings bat dnsutils
        qalculate-gtk thunderbird xdotool ueberzug python-pywal sxhkd font-manager gpick htop
        j4-dmenu-desktop xfce-polkit fzf
        );;
	
    * ) ;;
esac

{{ if eq .osid "linux-fedora" }}
# enable copr repor for i3status-rust
sudo dnf copr enable atim/i3status-rust -y
PACKAGES+=(i3status-rust)

sudo dnf install ${PACKAGES[@]} --skip-broken

{{ else if eq .osid "linux-arch" }}
delete=NetworkManager-tui
PACKAGES=(${PACKAGES[@]/$delete})

PACKAGES+=(
    i3status-rust man-db alacritty sx
)

ARCH_PKGS=()
for pkg in ${PACKAGES[@]};
do 
    ARCH_PKGS+=($(pacman -Ssq $pkg | grep "^$pkg$"))
done

sudo pacman -S --needed ${ARCH_PKGS[@]}

# install yay
if ! command -v yay > /dev/null ; then
    sudo pacman -S --needed git base-devel && \
        rm -rf ~/Downloads/yay && \
        git clone https://aur.archlinux.org/yay.git ~/Downloads/yay && \
        cd ~/Downloads/yay && \
        makepkg -si
fi

AUR+=(
    betterlockscreen
)

yay -S --noconfirm --needed ${AUR[@]}

{{ else }}
sudo apt-get install ${PACKAGES[@]}

{{ end }}

#######################################
# other
#######################################

PYPKGS+=(
    pynvim
)

# python 3 for nvim
for pkg in ${PYPKGS[@]}
do
    if ! pip list | grep $pkg > /dev/null ; then
        python3 -m pip install $pkg
    else
        OUTPUT+=("${BLUE}INFO: ${LGREEN}[PYTHON] ${pkg}${NC} already installed.")
    fi
done

# oh-my-zsh
pkg=oh-my-zsh
if ! find ~/.oh-my-zsh/oh-my-zsh.sh > /dev/null ; then
    rm -rf ~/.oh-my-zsh
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
    OUTPUT+=("${BLUE}INFO: ${LGREEN}${pkg}${NC} already installed.")
fi

#######################################
# Commands
#######################################

if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# change default shell to zsh
if ! echo $SHELL | grep zsh > /dev/null ; then
    chsh -s $(which zsh)
else
    OUTPUT+=("${BLUE}INFO: ${GREEN}chsh${NC} already done.")
fi

#######################################
# Summary
#######################################

echo -e "-----------------------------------------------------"

for msg in "${OUTPUT[@]}"
do
    echo -e $msg
done

echo -e "${CYAN}Script finished!${NC}"
