#!/bin/bash


#######################################
# Colors
#######################################

NC='\033[0m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
LGREEN='\033[1;32m'
BLUE='\033[0;34m'
LBLUE='\033[1;34m'
RED='\033[0;31m'

#######################################
# Init
#######################################

# Confirm running the script
read -p "$(echo -e "Do you wish to run the ${LBLUE}bootstrap script${NC} [y/N]: ")" yn

case $yn in
    [Yy]* ) 
        ;;
    * ) 
        exit
        ;;
esac

echo -e "${BLUE}Installing packages...${NC}"

#######################################
# Functions
#######################################

wm_menu() {
    echo -ne "
1) Awesome
2) Qtile (Arch only)
3) i3wm
*) None
Choose your ${LBLUE}WM${NC}: "
    read -r wm

    case $wm in
        1)
            PACKAGES+=(awesome)
            ;;
        2) 
            PACKAGES+=(qtile)
            ;;
        3)
            PACKAGES+=(i3-gaps)
            ;;
        *)
            echo -e "${RED}No wm selected${NC}"
    esac
}

#######################################
# install distro-specific packages
#######################################

PACKAGES=(
    zsh 
    neovim
    alacritty
    python3
    python-pip 
    nodejs
    npm
    neofetch
)

# Window manager setup
read -p "$(echo -e "Do you wish to setup a ${LBLUE}Custom Desktop${NC} with extra packages [y/N]: ")" yn


case $yn in
    [Yy]* ) 
        wm_menu

        PACKAGES+=(dunst feh rofi picom polybar brightnessctl NetworkManager-tui
        blueman pipewire pavucontrol playerctl thunar thunar-volman gvfs ranger redshift xarchiver
        khal flameshot xclip xreader arandr alsa-utils polkit nitrogen qalculate-gtk
        lxappearance lightdm lightdm-gtk-greeter bat);;
    * ) ;;
esac

{{ if eq .osid "linux-ubuntu" }}
    sudo apt-get install ${PACKAGES[@]}

{{ else if eq .osid "linux-fedora" }}
    # enable copr repor for i3status-rust
    sudo dnf copr enable atim/i3status-rust -y
    PACKAGES+=(i3status-rust)

    sudo dnf install ${PACKAGES[@]} --skip-broken

{{ else if eq .osid "linux-arch" }}
    delete=NetworkManager-tui
    PACKAGES=(${PACKAGES[@]/$delete})

    PACKAGES+=(
        i3status-rust man-db
    )

    sudo pacman -S ${PACKAGES[@]} --needed

    # install yay
    if ! command -v yay > /dev/null ; then
        sudo pacman -S --needed git base-devel && \
            rm -rf ~/Downloads/yay && \
            git clone https://aur.archlinux.org/yay.git ~/Downloads/yay && \
            cd ~/Downloads/yay && \
            makepkg -si
    fi

    AUR+=(
        betterlockscreen
    )

    yay -S ${AUR[@]} --noconfirm

{{ end }}

#######################################
# other
#######################################

PYPKGS=(
    pynvim
)

if [ $wm -eq "2" ]; then
    PYPKGS+=(
        psutil dbus-next
    )
fi


# python 3 for nvim
for pkg in ${PYPKGS[@]}
do
    if ! pip list | grep $pkg > /dev/null ; then
        python3 -m pip install $pkg
    else
        echo -e "${BLUE}INFO: ${LGREEN}[PY] ${pkg}${NC} already installed."
    fi
done

# oh-my-zsh
pkg=oh-my-zsh
if ! find ~/.oh-my-zsh/oh-my-zsh.sh > /dev/null ; then
    rm -rf ~/.oh-my-zsh
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
    echo -e "${BLUE}INFO: ${LGREEN}${pkg}${NC} already installed."
fi

#######################################
# Commands
#######################################

if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# change default shell to zsh
if ! echo $SHELL | grep zsh > /dev/null ; then
    chsh -s $(which zsh)
else
    echo -e "${BLUE}INFO: ${GREEN}chsh${NC} already done."
fi

echo -e "${CYAN}Script finished!${NC}"
